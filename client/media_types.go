// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/tikasan/goa-oauth2-practice/design
// --out=$(GOPATH)/src/github.com/tikasan/goa-oauth2-practice
// --version=v1.1.0
//
// API "auth": Application Media Types
//
// The content of this file is auto-generated, DO NOT MODIFY

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// GoaMessageJson media type (default view)
//
// Identifier: application/vnd.goa.message.json; view=default
type GoaMessageJSON struct {
	// message
	Message string `form:"message" json:"message" xml:"message"`
}

// Validate validates the GoaMessageJSON media type instance.
func (mt *GoaMessageJSON) Validate() (err error) {
	if mt.Message == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "message"))
	}
	return
}

// DecodeGoaMessageJSON decodes the GoaMessageJSON instance encoded in resp body.
func (c *Client) DecodeGoaMessageJSON(resp *http.Response) (*GoaMessageJSON, error) {
	var decoded GoaMessageJSON
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
